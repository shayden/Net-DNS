To Do list for Net::DNS
=======================

* Work on the dynamic update code.  Some things remaining to do:

  - Add the "new_from_string" method to the following RR types:

      EID
      NIMLOC
      NSAP
      NULL

  - Do sanity checking on user-created RR objects.  Update the BUGS
    section in RR.pm when this is complete.

  - Allow yxrrset & friends to take an RR object as an argument.

  - Do more sanity checking on yxrrset & friends.

  - Add an "update" method to the resolver class to send the update
    packet to the zone's authoritative nameservers (see also RFC
    2136, Section 4).

  - Do case-insensitive comparisons in Net::DNS::Packet->dn_comp.

* Consider getting rid of the "; no data" string from $rr->rdatastr.  Add
  it possibly in $rr->string;

* Implement AAONLY queries.  Here's a code fragment to set the
  nameserver list to the hosts returned in the authority section:

	$res->nameservers(map { $_->nsdname }
	                  grep { $_->type eq "NS" }
		          $ans->authority);

* Improve the error handling and reporting.  Some things to do:

  - Make sure empty RDATA sections don't cause the program to print
    the obnoxious "no such method" warning.

  - Check for invalid RR types or classes.

  - Handle "host is down" error in Resolver.pm.

  - Set a more descriptive error if a zone transfer fails, especially
    if the nameserver isn't authoritative (current code returns NOERROR
    if the nameserver answered but wasn't authoritative).

  - Consider documenting the use of "eval" to avoid a fatal error
    in certain places.  Idea by Dirk Herr-Hoyman.

* Restructure some of the code.  Some things to look at:

  - Net::DNS::Resolver->send (needs to be broken into smaller pieces).

  - Net::DNS::Packet->dn_expand (get rid of the recursive call).

  - Passing of references between Net::DNS::Packet and Net::DNS::RR.

* Implement TCP queries.  Things to change once this is ready:

  - Change the code checking for packet size in Net::DNS::Resolver->send.

  - Use TCP by default if $res->usevc is true.

  - Retry truncated UDP responses using TCP if $res->igntc is false.

* Add more RR types.  Currently unimplemented are:

    MD		RFC 1035 (obsolete)
    MF		RFC 1035 (obsolete)
    WKS		RFC 1035
    NSAP_PTR	RFC 1348 (deprecated)
    GPOS	RFC 1712 (withdrawn)
    KEY		RFC 2065
    NXT		RFC 2065
    SIG		RFC 2065
    ATMA	???
    TSIG	draft-ietf-dnsind-tsig-xx.txt

* Fix the TXT RR to handle more than 1 string in the RDATA section
  (RFC 1035, Section 3.3.14).

* Check the EID, NIMLOC, and NULL RR handling.

* Add test cases for NULL, EID, and NIMLOC to private zone data.
  NULL isn't allowed in master files per RFC 1035, Section 3.3.10;
  BIND 8.1-REL doesn't appear to implement EID or NIMLOC (perhaps
  via dynamic update?).

* Accept options in resolver config files.

* Write some front-end methods to do CNAME translations automagically.

* Write more demo scripts.

  - Work on nsupdate.pl (not included with the distribution) and add it
    to the demo directory.  Remaining to do:

    o Write documentation.

    o Make it more robust.

  - Work on dns.cgi (not included with the distribution) and add it to
    the demo directory.  Some things remaining to do:

    o Check for HTTP_USER_AGENT in zone transfers.

    o Add a way to change resolver settings.  Edit do_axfr and remove
      the query for the zone's nameservers when this is finished.

    o Add support for dynamic updates.

  - Consider writing a simple nameserver with Net::DNS.

* Add some text- and html-specific sections to the manual pages.

* Check code for conformance to the guidelines listed in The Perl 5 Module
  List.  Check style & efficiency according to the perlstyle manpage and
  the Camel.

* Consider providing an .xs file for those who wish to link against
  libresolv or libbind instead of using the entirely-Perl resolver.

* Consider rewriting the packet-parsing code in C for increased speed,
  or possibly going back to using Dave Shield's resparse library.

---
$Id: TODO,v 1.11 1997/07/06 16:42:23 mfuhr Exp $
